import React, { useEffect} from "react";
// import somePlugin from 'plugin';        //  псевдо код

export const useEffect = () => {

    // 1. лучше делать комментарии, что делает, тк может быть несколько
    useEffect(() => {}, []);

    // 2. или использовать именнованную ф-цию, имя которой скажет что она делает
    useEffect(function initPlugin() {
        // псевдо код, инициализтруем плагин (библиотеку)
        somePlugin.init();

        // когда хотим его за дестроить (удалить)
        return () => {somePlugin.destroy}
        // если пустой массив - [] - ф-ция размонтирования сработает один раз
    }, []);

    // размонтирование происходит при каждом обновлении, useEffect будет вызываться каждый раз
    // сначало вызовется return(размонтирование) предыдущешл useEffect, а потом мотирование 
    // сработает return один раз при размонтировании, если нет зависимости  - [], 
    // если есть зависимость - [pros] - то return будет срабатывать каждый раз при изменении - props
    // те если [] - reutrn выполнится один раз, при размонтировании приложения
    // если [props] - return каждый раз, при изменении props

    // 3.
    useEffect(() => {
        const handler = () => {}
        // добавили слушателя
        document.addEventListener('click', handler);

        // удалили слушателя
        return () => {document.removeEventListener('click', handler)}

    });
    // useEffect - часто используется в создании кастомных (собственных) хуках

    return <div>

    </div>
};